name: Build and Push

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          cache: 'maven'

      - run: mvn test --batch-mode --file pom.xml

  push:
    runs-on: ubuntu-20.04

    needs: build

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          cache: 'maven'

      - run: mvn verify --batch-mode --file pom.xml

      - uses: docker/setup-buildx-action@v1

      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # e.g. docker tag: ghcr.io/joebloggs/repo:sha-b3c34f1 => sha-b3c34f1
      - name: extract-image-tag
        id: extract-image-tag
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        # language=bash
        run: |
          echo ::set-output name=tag::${TAGS##*:}

      - name: update-image-tag
        uses: ./.github/actions/workflow-dispatch
        continue-on-error: true
        with:
          repository: jon-ruckwood/devoxx-2022-infrastructure
          workflow: update-image-tag.yaml
          # language=yaml
          body: |
            ref: main
            inputs:
              image-tag: ${{ steps.extract-image-tag.outputs.tag }}
          service-account-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Add summary
        env:
          IMAGE_TAG: ${{ steps.extract-image-tag.outputs.tag }}
        run: echo "Deploying \`${IMAGE_TAG}\` :shipit:" >> $GITHUB_STEP_SUMMARY
